% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4-amalgam.R
\name{amalgam}
\alias{amalgam}
\title{The \code{amalgam} Package}
\usage{
amalgam(
  x,
  n.amalgams = 3,
  maxiter = ncol(x) * 10,
  z = NULL,
  objective = objective.keepDist,
  weights = weight.Nto1,
  asSLR = FALSE,
  shrink = FALSE,
  ...
)
}
\arguments{
\item{x}{A matrix. The input data. Rows are samples and columns are components.}

\item{n.amalgams}{An intger. How many components the amalgamation should have.}

\item{maxiter}{An integer. How long the genetic algorithm should run.}

\item{z}{A matrix. The constraining matrix. Optional.}

\item{objective}{A function. The objective function. See above.}

\item{weights}{A function. The weights function. See above.}

\item{asSLR}{A boolean. Toggles whether to turn the amalgams into a set
of summed log-ratios (SLRs). See \code{\link{as.slr}}.}

\item{shrink}{A boolean. Toggles whether to estimate bin frequencies
from the count vectors by James-Stein-type shrinkage.}

\item{...}{Arguments passed to \code{GA::ga} function.}
}
\value{
An \code{amalgam} S3 object.
}
\description{
Welcome to the \code{amalgam} package!

The \code{amalgam} function finds a useful data-driven amalgamation
 for the provided compositional data set (where rows are samples and
 columns are components). It works like this:

1. The genetic algorithm suggests random binary vector solutions.

2. Each binary vector is turned into a weights matrix that defines a
 rule for amalgamating the composition. See \code{\link{weight.Nto1}}
 and \code{\link{weight.NtoN}} for the weights matrix types.

3. An objective function determines the goodness of the weights matrix.
 See \code{\link{objective.keepDist}} and \code{\link{objective.maxRDA}}
 for the objective function types.

4. The genetic algorithm "breeds" and "mutates" the best solutions.
 Over time, the optimal solution emerges.
}
\examples{
simData <- randAcomp(5, 10)
result <- amalgam(simData, n.amalgams = 3, objective = objective.keepDist)
print(result)
plot(result)
}
\author{
Thom Quinn
}
